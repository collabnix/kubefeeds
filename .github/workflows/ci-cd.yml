name: ? KubeFeeds CI/CD & Auto Update

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every 2 hours to refresh feeds
    - cron: '0 */2 * * *'
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh all feeds'
        required: false
        default: 'false'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create public directory
      run: mkdir -p public
    
    - name: Test application startup
      run: |
        timeout 30s npm start &
        sleep 10
        curl -f http://localhost:3000/api/stats || exit 1
        echo "? Application started successfully"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          collabnix/kubefeeds
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  refresh-feeds:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event.inputs.force_refresh == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create public directory and basic HTML
      run: |
        mkdir -p public
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>KubeFeeds - Loading...</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
        </head>
        <body>
            <div style="text-align: center; padding: 50px; font-family: Arial, sans-serif;">
                <h1>? KubeFeeds</h1>
                <p>Kubernetes News Aggregator</p>
                <p>Loading feeds...</p>
            </div>
        </body>
        </html>
        EOF
    
    - name: Start application and refresh feeds
      run: |
        echo "? Starting feed refresh process..."
        npm start &
        APP_PID=$!
        
        # Wait for app to start
        sleep 10
        
        # Trigger feed refresh
        curl -X POST http://localhost:3000/api/refresh || echo "?? Refresh endpoint not ready yet"
        
        # Wait for feeds to be processed
        sleep 30
        
        # Check stats
        curl http://localhost:3000/api/stats
        
        # Stop the application
        kill $APP_PID
        
        echo "? Feed refresh completed"

  deploy-to-vercel:
    needs: [test, build-and-push]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Vercel CLI
      run: npm install -g vercel
    
    - name: Deploy to Vercel
      run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  notify:
    needs: [test, build-and-push, refresh-feeds]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Send Slack notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: |
          ? KubeFeeds Update Complete!
          
          ? Status: ${{ job.status }}
          ? Trigger: ${{ github.event_name }}
          ? Repository: ${{ github.repository }}
          ? Commit: ${{ github.sha }}
          
          The Kubernetes feeds have been refreshed and the portal is updated!
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: env.SLACK_WEBHOOK_URL != null